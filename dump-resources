#!/usr/bin/env perl

# !!! This is written specifically for MineColonies structure nbt files.
# !!! There are no checks for invalid data.
# !!! Use at your own peril!

# Use my version of Minecraft::NBTReader found at
# https://github.com/harleypig/Minecraft-NBTReader
#
# I've added support for the TAG_Int_Array type and removed a block for nbt
# files that end with two nulls.

# XXX: Do I need to include the location of the hut block in the output?
# XXX: Do I count 'double wooden slabs' as 2 slabs?

use strict;
use warnings;

use File::Basename;
use Getopt::Long;

use lib '.';
use MineColonies::Schematic::Load;
use MineColonies::Schematic::Parse;
use MineColonies::Schematic::Resources;

#################################################################################

sub usage {
  print <<EOU;
Usage: $0 [options] NBTFile

Options:
  -h --help         This help page.

  -t --output-type  Possible types are

      text  - Simple text file.
      forum - Formatted for the MineColonies forum.

EOU

  print "$_\n" for @_;

  exit 1;

  # Add handling for
  #   --output -o ... send output to a file instead of stdout.
  #   --cumulative -c ... build output based on building levels, if they have levels.

}

# Defaults
my $output_type = 'text';

GetOptions(
  'help|?'     => \my $help,
  'output-type|t=s' => \$output_type,
) or usage();

$help && usage();

my @valid_output_types = qw( text forum );
my $ot_rx = join '|', @valid_output_types;

$output_type =~ /^($ot_rx)$/ or usage("Unknown output type: $output_type");

#################################################################################

my $filename = shift or die "Must pass filename.\n";
my $data     = MineColonies::Schematic::Load::read_file($filename);
my $hut_info = MineColonies::Schematic::Parse::parse_data($data);

$hut_info->{output_type} = $output_type;

MineColonies::Schematic::Resources::dump_required_resources( $hut_info, $filename );
